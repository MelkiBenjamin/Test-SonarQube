name: configuration et deploie aplication sur aks
on:
    push:
    workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: demarer minikube
      run: minikube start --driver=docker

    - name: creer namespace argocd
      run: kubectl create namespace argocd

    - name: installe argocd
      run: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: redirection de port
      run: |
        echo '{"spec": {"type": "LoadBalancer"}}' > patch.json
        kubectl patch svc argocd-server -n argocd --type merge --patch "$(cat patch.json)"

    - name: sleep 90s
      run: sleep 90s

    - name: decrie svc argocd-server
      run: kubectl describe svc -n argocd argocd-server

    - name: affiche pod
      run: kubectl get pods -n argocd

    - name: affiche svc
      run: kubectl get svc -n argocd

    - name: install cli argocd
      run: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: minikube service argocd-server -n argocd
      run: minikube service argocd-server -n argocd

    - name: affiche 1
      run: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

    - name: affiche3
      run: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

    - name: affiche 2
      run: minikube service -n argocd argocd-server | grep -o -m 1 "http://.*" | sed "s/.$//"

    - name: affiche svc
      run: kubectl get svc -n argocd

    - name: conexion argocd
#      env:
#        ip: "minikube service -n argocd argocd-server | grep -o -m 1 'http://.*'| head -4 | tail -1"
#        mdp: 'kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo'
      run: argocd login minikube service -n argocd argocd-server | grep -o -m 1 "http://.*" | sed "s/.$//" --username admin --password kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo --insecure

    - name: affiche 2
      run: kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'

    - name: conexion argocd
      env:
        ip: kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
        mdp: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
      run: argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].ip}') --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --insecure


#    - name: affiche le mot de passe1
#      run: cat test.txt

#    - name: affiche le mot de passe2
#      run: cat test2.txt
    
#    - name: Se connecter Ã  Argo CD
#      run: |
#        argocd login localhost:8080 --insecure --username admin --password admin

#    - name: argocd new mdp
#      run: argocd account update-password --current-password Z9Zx9cqZw3BfSQ4N --new-password admin
      
    - name: creer application et synchronize automatique a github
      run: |
        kubectl config set-context --current --namespace=argocd
        argocd login --core
        argocd app create evershop --repo https://github.com/MelkiBenjamin/test-deploiement-apli-kubenete-argocd --path evershop --dest-server https://kubernetes.default.svc --dest-namespace default --sync-policy automated --auto-prune
        sleep 120s  
        
    - name: minikube service
      run: minikube service

    - name: minikube service argocd-server -n argocd
      run: minikube service argocd-server -n argocd
      
    - name: affiche l'url du service
      run: |
        kubectl get service
        minikube service evershop --url -n evershop